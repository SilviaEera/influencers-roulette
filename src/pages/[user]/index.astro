---
import Layout from '../../layouts/Layout.astro';
import Background from '../../components/Background.astro';

const { user } = Astro.params;

---

<Layout>
    <Background />
    
    <main class="min-h-screen p-4 sm:p-8 relative z-10 flex items-center justify-center">
        <div class="max-w-xl mx-auto w-full">
            <!-- Title -->
            <h1 class="text-3xl sm:text-4xl font-bold text-center mb-6 sm:mb-8 text-white drop-shadow-lg">
                üé∞ RULETA DE PREMIOS üé∞
            </h1>
            <!-- Sub title -->
            <h2 class="text-base sm:text-lg font-bold text-center mb-6 sm:mb-8 text-white drop-shadow-lg">
                {user}
            </h2>
            
            <!-- Input Fields -->
            <div class="bg-white rounded-lg shadow-lg p-4 sm:p-6 mb-4 sm:mb-6">
                <input 
                    type="text" 
                    id="username" 
                    placeholder="üë§ Username" 
                    value={user}
                    class="w-full px-3 py-2 sm:px-4 sm:py-3 border rounded-lg mb-3 focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition text-sm sm:text-base"
                />
                <input 
                    type="email" 
                    id="email" 
                    placeholder="üìß Email" 
                    class="w-full px-3 py-2 sm:px-4 sm:py-3 border rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition text-sm sm:text-base"
                />
            </div>
            
            <!-- Wheel -->
            <div class="bg-white rounded-lg shadow-lg p-4 sm:p-6">
                <div class="wheel-container relative w-full max-w-[300px] aspect-square mx-auto">
                    <div class="pointer absolute top-[-15px] left-1/2 -translate-x-1/2 w-0 h-0 border-l-[15px] border-l-transparent border-r-[15px] border-r-transparent border-t-[30px] border-t-red-500 z-20"></div>
                    <svg id="wheel" class="wheel w-full h-full" viewBox="0 0 300 300">
                        <circle cx="150" cy="150" r="148" fill="none" stroke="#333" stroke-width="4"/>
                        <!-- Sections will be added by JavaScript -->
                        <circle cx="150" cy="150" r="25" fill="white" stroke="#333" stroke-width="3"/>
                        <text x="150" y="158" text-anchor="middle" font-size="20">‚≠ê</text>
                    </svg>
                </div>
                
                <!-- Spin Button -->
                <div class="text-center mt-4 sm:mt-6">
                    <button 
                        id="spinBtn" 
                        class="bg-blue-600 text-white font-bold py-2 px-6 sm:py-3 sm:px-8 text-lg sm:text-xl rounded-lg hover:bg-blue-700 transition transform hover:scale-105 active:scale-95 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
                    >
                        üéØ SPIN
                    </button>
                </div>
                
                <!-- Control Variable (for testing) -->
                <div class="mt-3 sm:mt-4 p-3 sm:p-4 bg-gray-50 rounded-lg">
                    <label class="flex items-center justify-center gap-2 cursor-pointer">
                        <input 
                            type="checkbox" 
                            id="shouldWinCheckbox" 
                            checked
                            class="w-4 h-4 sm:w-5 sm:h-5 text-blue-600 rounded focus:ring-blue-500"
                        />
                        <span class="font-semibold text-gray-700 text-sm sm:text-base">Win/Lose?</span>
                    </label>
                </div>
                
                <!-- Result -->
                <div id="result" class="hidden text-center mt-3 sm:mt-4 p-3 sm:p-4 rounded-lg">
                    <p id="resultText" class="text-lg sm:text-2xl font-bold"></p>
                </div>
            </div>
        </div>
    </main>
</Layout>

<script>
    import { initWheel, spinWheel, setShouldWin } from '../../scripts/roulette-game';
    
    // Get elements
    const wheel = document.getElementById('wheel') as unknown as SVGElement;
    const spinBtn = document.getElementById('spinBtn') as HTMLButtonElement;
    const usernameInput = document.getElementById('username') as HTMLInputElement;
    const emailInput = document.getElementById('email') as HTMLInputElement;
    const resultDiv = document.getElementById('result') as HTMLDivElement;
    const resultText = document.getElementById('resultText') as HTMLParagraphElement;
    const shouldWinCheckbox = document.getElementById('shouldWinCheckbox') as HTMLInputElement;
    
    // Initialize wheel
    if (wheel) {
        initWheel(wheel);
    }
    
    // Handle checkbox change
    shouldWinCheckbox?.addEventListener('change', () => {
        setShouldWin(shouldWinCheckbox.checked);
    });
    
    // Handle spin button click
    spinBtn?.addEventListener('click', () => {
        const username = usernameInput?.value.trim() || '';
        const email = emailInput?.value.trim() || '';
        
        if (!wheel) return;
        
        // Hide previous result
        resultDiv?.classList.add('hidden');
        
        // Disable button
        spinBtn.disabled = true;
        spinBtn.classList.add('opacity-50');
        
        spinWheel(username, email, wheel, (isWin: boolean) => {
            // Show result
            if (isWin) {
                resultText.textContent = 'üéâ Congratulations! You WON! üéâ';
                resultText.className = 'text-lg sm:text-2xl font-bold text-green-600';
                resultDiv.className = 'text-center mt-3 sm:mt-4 p-3 sm:p-4 rounded-lg bg-green-100';
            } else {
                resultText.textContent = 'üò¢ Sorry! You LOST! Better luck next time!';
                resultText.className = 'text-lg sm:text-2xl font-bold text-red-600';
                resultDiv.className = 'text-center mt-3 sm:mt-4 p-3 sm:p-4 rounded-lg bg-red-100';
            }
            
            resultDiv?.classList.remove('hidden');
            
            // Re-enable button
            spinBtn.disabled = false;
            spinBtn.classList.remove('opacity-50');
        });
    });
</script>